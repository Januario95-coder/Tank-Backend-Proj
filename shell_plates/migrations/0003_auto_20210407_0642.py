# Generated by Django 3.1.7 on 2021-04-07 06:42

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('shell_plates', '0002_auto_20210304_0855'),
    ]

    operations = [
        migrations.AlterField(
            model_name='probabilityfactordata',
            name='corrosion_under_insulation_CUI',
            field=models.CharField(choices=[('Tank shell is not insulated - score=2', 'Tank shell is not insulated'), ('Tank shell is properly insulated and CUI is unlikely to occur - score=0', 'Tank shell is properly insulated and CUI is unlikely to occur'), ('CUI is likely to occur - score=0', 'CUI is likely to occur')], max_length=100, verbose_name='6: Corrosion under insulation (CUI)'),
        ),
        migrations.AlterField(
            model_name='probabilityfactordata',
            name='external_coating_applied_to_shell_plates',
            field=models.CharField(choices=[('External coating applied and quality is sound - score=0', 'External coating applied and quality is sound'), ('External coating applied and quality is poor - score=1', 'External coating applied and quality is poor'), ('External coating not existing - score=2', 'External coating not existing')], max_length=100, verbose_name='2: External coating applied to shell plates'),
        ),
        migrations.AlterField(
            model_name='probabilityfactordata',
            name='heating_coils_in_tank',
            field=models.CharField(choices=[('No heating coil or no contact between heating coil and shell plates - score=0', 'No heating coil or no contact between heating coil and shell plates'), ('Presence of heating coil in direct contact with shell plates - score=1', 'Presence of heating coil in direct contact with shell plates')], max_length=100, verbose_name='3b: Heating coils in tank'),
        ),
        migrations.AlterField(
            model_name='probabilityfactordata',
            name='impressed_coating_applied_to_sheel_plates',
            field=models.CharField(choices=[('Internal coating applied and quality is sound - score=0', 'Internal coating applied and quality is sound'), ('Internal coating applied and quality is poor - score=1', 'Internal coating applied and quality is poor'), ('Internal coating not existing - score=2', 'Internal coating not existing')], max_length=100, verbose_name='1: Impressed coating applied to sheel plates'),
        ),
        migrations.AlterField(
            model_name='probabilityfactordata',
            name='product_corrosivity',
            field=models.CharField(choices=[('Product group 4 - score=2', 'Product group 4'), ('Product group 5 - score=1', 'Product group 5'), ('Product group 3 - score=0', 'Product group 3'), ('Product group 6 - score=0', 'Product group 6'), ('Product group 1 - score=1', 'Product group 1')], max_length=100, verbose_name='4: product corrosivity'),
        ),
        migrations.AlterField(
            model_name='probabilityfactordata',
            name='storage_conditions',
            field=models.CharField(choices=[('Temperature of product < 40°C - score=0', 'Temperature of product < 40°C'), ('40°C Temperature of product < 85°C - score=1', '40°C Temperature of product < 85°C'), ('Temperature of product > 85{DEGREE_SIGN}C - score=2', 'Temperature of product > 85°C')], max_length=100, verbose_name='3a: Storage conditions'),
        ),
        migrations.AlterField(
            model_name='probabilityfactordata',
            name='vapour_corrosivity',
            field=models.CharField(choices=[('Vapour group 4 - score=2', 'Vapour group 4'), ('Vapour group 5 - score=1', 'Vapour group 5'), ('Vapour group 3 - score=0', 'Vapour group 3'), ('Vapour group 6 - score=0', 'Vapour group 6'), ('Vapour group 1 - score=1', 'Vapour group 1')], max_length=100, verbose_name='5: Vapour Corrosivity'),
        ),
    ]
