# Generated by Django 3.1.7 on 2021-04-07 09:49

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('shell_plates', '0004_auto_20210407_0650'),
    ]

    operations = [
        migrations.AlterField(
            model_name='consequencefactordata',
            name='cost_of_repair',
            field=models.CharField(choices=[('Negligible or less than 5% of capital cost - score=1', 'Negligible or less than 5% of capital cost'), ('5-10% of capital cost - score=2', '5-10% of capital cost'), ('10-50% of capital cost - score=3', '10-50% of capital cost'), ('>50% of capital cost (new tank) - score=4', '>50% of capital cost (new tank)')], max_length=100, verbose_name='7b: Cost of repair'),
        ),
        migrations.AlterField(
            model_name='consequencefactordata',
            name='probable_magnitude_of_product_loss',
            field=models.CharField(choices=[('No release of product - score=1', 'No release of product'), ('<5% of tank contents - score=2', '<5% of tank contents'), ('>5% of tank contents - score=3', '>5% of tank contents')], max_length=100, verbose_name='7c: Probable magnitude of product loss'),
        ),
        migrations.AlterField(
            model_name='consequencefactordata',
            name='time_to_repair',
            field=models.CharField(choices=[('No internal entry required, limited repair - score=1, no limitation on repair time', 'No internal entry required, limited repair, no limitation on repair time'), ('Internal entry required, limited repair (<3 months) - score=2', 'Internal entry required, limited repair (<3 months)'), ('Internal entry required, major repair (3-8 months - score=3)', 'Internal entry required, major repair (3-8 months)'), ('Internal entry required, major repair (>8 months) - score=4', 'Internal entry required, major repair (>8 months)')], max_length=100, verbose_name='7a: Time to repair'),
        ),
        migrations.AlterField(
            model_name='probabilityfactordata',
            name='storage_conditions',
            field=models.CharField(choices=[('Temperature of product < 40°C - score=0', 'Temperature of product < 40°C'), ('40°C Temperature of product < 85°C - score=1', '40°C Temperature of product < 85°C'), ('Temperature of product > 85°C - score=2', 'Temperature of product > 85°C')], max_length=100, verbose_name='3a: Storage conditions'),
        ),
    ]
