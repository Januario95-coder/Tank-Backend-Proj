{"version":3,"sources":["sidebar/Tanker.js","sidebar/BottomPlates.js","sidebar/ShellPlates.js","sidebar/TankRoof.js","sidebar/RiskAssess.js","sidebar/ProjectDetail.js","sidebar/Projects.js","sidebar/Sidebar.js","sidebar/index.js","App.js","index.js"],"names":["Tanker","className","src","alt","value","SelectField","fields","labelValue","valueHandler","undefined","filter","field","id","htmlFor","onChange","name","map","index","BottomPlates","loading","useState","impressCathodProtection","setImpressCathodProtection","impressCathodProtectionValue","setImpressCathodProtectionValue","sacriCathProte","setSacriCathProte","sacriCathProteValue","setSacriCathProteValue","bottomPlatesInternalCoating","setBottomPlatesInternalCoating","bottomPlatesInternalCoatingValue","setBottomPlatesInternalCoatingValue","bottomPlatesExternalCoating","setBottomPlatesExternalCoating","bottomPlatesExternalCoatingValue","setBottomPlatesExternalCoatingValue","storageCondition","setStorageCondition","storageConditionValue","setStorageConditionValue","typeOfBotton","setTypeOfBotton","typeOfBottonValue","setTypeOfBottonValue","heatingCoilsInTank","setHeatingCoilsInTank","heatingCoilsInTankValue","setHeatingCoilsInTankValue","productCorrosivity","setProductCorrosivity","productCorrosivityValue","setProductCorrosivityValue","foundationType","setFoundationType","foundationTypeValue","setFoundationTypeValue","heightOfFoundation","setHeightOfFoundation","heightOfFoundationValue","setHeightOfFoundationValue","effectiveDrainage","setEffectiveDrainage","effectiveDrainageValue","setEffectiveDrainageValue","timeToRepair","setTimeToRepair","timeToRepairValue","setTimeToRepairValue","costOfRepair","setCostOfRepair","costOfRepairValue","setCostOfRepairValue","drainageMagnitude","setDrainageMagnitude","drainageMagnitudeValue","setDrainageMagnitudeValue","likelihoodOfInjury","setLikelihoodOfInjury","likelihoodOfInjuryValue","setLikelihoodOfInjuryValue","productFlamability","setProductFlamability","productFlamabilityValue","setProductFlamabilityValue","productToxicity","setProductToxicity","productToxicityValue","setProductToxicityValue","locationOfTank","setLocationOfTank","environHazard","setEnvironHazard","vapourEmission","setVapourEmission","lastInspection","setLastInspection","minThicknessMeasuredPrevInsp","setMinThicknessMeasuredPrevInsp","minThicknessMeasuredPresentInsp","setMinThicknessMeasuredPresentInsp","periodOfServiceBetweenPrevAndPresentInspe","setPeriodOfServiceBetweenPrevAndPresentInspe","minAllowBottomPlaceThickness","setMinAllowBottomPlaceThickness","ndtMethodUsed","setNdtMethodUsed","freqOfInternalInsp","setFreqOfInternalInsp","typeOfInternecting","setTypeOfInternecting","probabilityFactor","setProbabilityFactor","probabilityRating","setProbabilityRating","economicAspectsConsequenceFactor","setEconomicAspectsConsequenceFactor","economicAspectsConseqRating","setEconomicAspectsConseqRating","healthSafetyAspectsconseqFactor","setHealthSafetyAspectsconseqFactor","healthSafetyAspectsConseqRating","setHealthSafetyAspectsConseqRating","environAspectsConsequenceFactor","setEnvironAspectsConsequenceFactor","environAspectsConsequenceRating","setEnvironAspectsConsequenceRating","overallConsequenceFactor","setOverallConsequenceFactor","overallConsequenceRating","setOverallConsequenceRating","riskRating","setRiskRating","corrosionRate","setCorrosionRate","accelerationFactorForPitting","setAccelerationFactorForPitting","adjustedCorrosionRate","setAdjustedCorrosionRate","remainingLife","setRemainingLife","confidenceFactor","setConfidenceFactor","confidenceFactorAdjustement","setConfidenceFactorAdjustement","ajustedConfidenceFactor","setAjustedConfidenceFactor","intervalBeforeNextRequiredInspection","setIntervalBeforeNextRequiredInspection","nextInspection","setNextInspection","isLoaded","setIsLoaded","toggleProbaFactorData","setToggleProbaFactorData","toggleConseFactorData","setToggleConseFactorData","toggleInspeData","setToggleInspeData","toggleRiskAssess","setToggleRiskAssess","useEffect","fetch","then","res","json","data","default_values","probability_factor_data","impresses_cathodic_protect","sacrificial_cathodic_propect","bottom_plates_internal_coating_or_linin","bottom_plates_external_coatin","storage_condition","types_of_bottom","heating_coils_in_tanks","products_corrosivity","foundation_types","heights_of_foundation","effectiveness_of_drainages","consequence_factor_data","time_to_repair","cost_of_repair","probable_magnitude_of_product_loss","likelihood_of_injury_to_personnel","product_flammability_as_per_MCSP","product_toxicity","catch","err","console","log","onClick","e","target","type","preventDefault","dataToSubmit","method","headers","credentials","body","JSON","stringify","disabled","style","backgroundColor","ShellPlates","TankRoof","RiskAssess","ProjectDetail","tankerName","setTankerName","tankerDescription","setTankerDescription","description","to","path","date1","Date","toLocaleDateString","date2","Projects","tankerDesc","setTankerDesc","startDate","setStartDate","endDate","setEndDate","user","setUser","admin","setAdmin","error","setError","tanker_name","tanker_descri","start_date","end_date","tanker","allProjects","setAllProjects","setProjectIsLoaded","createTankUpdate","setCreateTankUpdate","idToSubmit","setIdToSubmit","isDetailPage","setIsDetailPage","tankerId","setTankerId","popupLoginToggle","document","querySelector","classList","toggle","fetchProjects","setTimeout","onSubmit","toSubmit","status","Error","statusText","placeholder","required","rows","color","fontSize","Sidebar","ReactRouterSetup","App","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.db5bdb0a.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\nconst Tanker = () => {\r\n\treturn (\r\n\t\t<div className=\"Tank-dashboard menu-session\">\r\n\t\t\t<p>Tank Dashboard</p>\r\n\t\t\t<span className=\"Tank-header\">\r\n\t\t\t\t<i className=\"fab fa-servicestack\"></i>\r\n\t\t\t\t<span>\r\n\t\t\t\t\t<p className=\"Tank-title\">Tank Dashboard</p>\r\n\t\t\t\t\t<span className=\"Tank-title-summary\">Tank Summary Dashboard</span>\r\n\t\t\t\t</span>\r\n\t\t\t</span>\r\n\t\t\t\r\n\t\t\t<div className=\"image-session\">\r\n\t\t\t\t<img src=\"/circle.JPG\" alt=\"image-session\" />\r\n\t\t\t</div>\r\n\t\t\t\r\n\t\t\t<div className=\"Tank-summary\">\r\n\t\t\t\t<span>Project List</span>\r\n\t\t\t\t<br />\r\n\t\t\t\t<select className=\"select-Tank\">\r\n\t\t\t\t\t<option value=\"default\">Select Tank</option>\r\n\t\t\t\t\t<option value=\"Tank1\">Tank 1</option>\r\n\t\t\t\t</select>\r\n\t\t\t\t\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<table className=\"Tank-table\">\r\n\t\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t\t<tr className=\"Tank-table-header\">\r\n\t\t\t\t\t\t\t\t<th>S No</th>\r\n\t\t\t\t\t\t\t\t<th className=\"rest-cell\">Tank Name</th>\r\n\t\t\t\t\t\t\t\t<th className=\"rest-cell\">Primary Function</th>\r\n\t\t\t\t\t\t\t\t<th className=\"rest-cell\">Tank Manned Status</th>\r\n\t\t\t\t\t\t\t\t<th className=\"rest-cell\">Tank Risk Ranking</th>\r\n\t\t\t\t\t\t\t\t<th>Exposure Category</th>\r\n\t\t\t\t\t\t\t\t<th className=\"cell-fixed-width\">Selected Next Inspection Intervals (years)</th>\r\n\t\t\t\t\t\t\t\t<th className=\"cell-fixe-date\">Last Inspection Date</th>\r\n\t\t\t\t\t\t\t\t<th className=\"cell-fixe-date\">Next Inspection Date</th>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t</thead>\r\n\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<td>1</td>\r\n\t\t\t\t\t\t\t\t<td>Production</td>\r\n\t\t\t\t\t\t\t\t<td>Yes</td>\r\n\t\t\t\t\t\t\t\t<td>VL</td>\r\n\t\t\t\t\t\t\t\t<td>L-3</td>\r\n\t\t\t\t\t\t\t\t<td>2</td>\r\n\t\t\t\t\t\t\t\t<td>6</td>\r\n\t\t\t\t\t\t\t\t<td></td>\r\n\t\t\t\t\t\t\t\t<td></td>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t</table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Tanker;","import React, { useState, useEffect } from 'react';\r\n\r\n\r\nconst BottomPlates = ({ id, loading }) => {\r\n    const [impressCathodProtection, setImpressCathodProtection] = useState([]);\r\n    const [impressCathodProtectionValue, setImpressCathodProtectionValue] = useState(undefined);\r\n    \r\n    const [sacriCathProte, setSacriCathProte] = useState([]);\r\n    const [sacriCathProteValue, setSacriCathProteValue] = useState('');\r\n    \r\n    const [bottomPlatesInternalCoating, setBottomPlatesInternalCoating] = useState([]);\r\n    const [bottomPlatesInternalCoatingValue, setBottomPlatesInternalCoatingValue] = useState('');\r\n    \r\n    const [bottomPlatesExternalCoating, setBottomPlatesExternalCoating] = useState([]);\r\n    const [bottomPlatesExternalCoatingValue, setBottomPlatesExternalCoatingValue] = useState('');\r\n    \r\n    const [storageCondition, setStorageCondition] = useState([]);\r\n    const [storageConditionValue, setStorageConditionValue] = useState('');\r\n    \r\n    const [typeOfBotton, setTypeOfBotton] = useState([]);\r\n    const [typeOfBottonValue, setTypeOfBottonValue] = useState('');\r\n    \r\n    const [heatingCoilsInTank, setHeatingCoilsInTank] = useState([]);\r\n    const [heatingCoilsInTankValue, setHeatingCoilsInTankValue] = useState('');\r\n    \r\n    const [productCorrosivity, setProductCorrosivity] = useState([]);\r\n    const [productCorrosivityValue, setProductCorrosivityValue] = useState('');\r\n    \r\n    const [foundationType, setFoundationType] = useState([]);\r\n    const [foundationTypeValue, setFoundationTypeValue] = useState('');\r\n    \r\n    const [heightOfFoundation, setHeightOfFoundation] = useState([]);\r\n    const [heightOfFoundationValue, setHeightOfFoundationValue] = useState('');\r\n    \r\n    const [effectiveDrainage, setEffectiveDrainage] = useState([]);\r\n    const [effectiveDrainageValue, setEffectiveDrainageValue] = useState('');\r\n    \r\n    const [scoreFive, setScoreFive] = useState([]);\r\n    \r\n    const [timeToRepair, setTimeToRepair] = useState([]);\r\n    const [timeToRepairValue, setTimeToRepairValue] = useState('');\r\n    \r\n    const [costOfRepair, setCostOfRepair] = useState([]);\r\n    const [costOfRepairValue, setCostOfRepairValue] = useState('');\r\n    \r\n    const [drainageMagnitude, setDrainageMagnitude] = useState([]);\r\n    const [drainageMagnitudeValue, setDrainageMagnitudeValue] = useState('');\r\n    \r\n    const [likelihoodOfInjury, setLikelihoodOfInjury] = useState([]);\r\n    const [likelihoodOfInjuryValue, setLikelihoodOfInjuryValue] = useState('');\r\n    \r\n    const [productFlamability, setProductFlamability] = useState([]);\r\n    const [productFlamabilityValue, setProductFlamabilityValue] = useState([]);\r\n    \r\n    const [productToxicity, setProductToxicity] = useState([]);\r\n    const [productToxicityValue, setProductToxicityValue] = useState([]);\r\n    \r\n    const [locationOfTank, setLocationOfTank] = useState([]);\r\n    const [environHazard, setEnvironHazard] = useState([]);\r\n    const [vapourEmission, setVapourEmission] = useState([]);\r\n    \r\n    const [lastInspection, setLastInspection] = useState('');\r\n    const [minThicknessMeasuredPrevInsp, setMinThicknessMeasuredPrevInsp] = useState([]);\r\n    const [minThicknessMeasuredPresentInsp, setMinThicknessMeasuredPresentInsp] = useState('');\r\n    const [periodOfServiceBetweenPrevAndPresentInspe, setPeriodOfServiceBetweenPrevAndPresentInspe] = useState('');\r\n    const [minAllowBottomPlaceThickness, setMinAllowBottomPlaceThickness] = useState('');\r\n    const [ndtMethodUsed, setNdtMethodUsed] = useState([]);\r\n    const [freqOfInternalInsp, setFreqOfInternalInsp] = useState([]);\r\n    const [typeOfInternecting, setTypeOfInternecting] = useState([]);\r\n    \r\n    const [probabilityFactor, setProbabilityFactor] = useState('');\r\n    const [probabilityRating, setProbabilityRating] = useState('');\r\n    const [economicAspectsConsequenceFactor, setEconomicAspectsConsequenceFactor] = useState('');\r\n    const [economicAspectsConseqRating, setEconomicAspectsConseqRating] = useState('');\r\n    const [healthSafetyAspectsconseqFactor, setHealthSafetyAspectsconseqFactor] = useState('');\r\n    const [healthSafetyAspectsConseqRating, setHealthSafetyAspectsConseqRating] = useState('');\r\n    const [environAspectsConsequenceFactor, setEnvironAspectsConsequenceFactor] = useState('');\r\n    const [environAspectsConsequenceRating, setEnvironAspectsConsequenceRating] = useState('');\r\n    const [overallConsequenceFactor, setOverallConsequenceFactor] = useState('');\r\n    const [overallConsequenceRating, setOverallConsequenceRating] = useState('');\r\n    const [riskRating, setRiskRating] = useState('');\r\n    \r\n    const [corrosionRate, setCorrosionRate] = useState('');\r\n    const [accelerationFactorForPitting, setAccelerationFactorForPitting] = useState('');\r\n    const [adjustedCorrosionRate, setAdjustedCorrosionRate] = useState('');\r\n    const [remainingLife, setRemainingLife] = useState('');\r\n    const [confidenceFactor, setConfidenceFactor] = useState('');\r\n    const [confidenceFactorAdjustement, setConfidenceFactorAdjustement] = useState('');\r\n    const [ajustedConfidenceFactor, setAjustedConfidenceFactor] = useState('');\r\n    const [intervalBeforeNextRequiredInspection, setIntervalBeforeNextRequiredInspection] = useState('');\r\n    const [nextInspection, setNextInspection] = useState('');\r\n    \r\n    const [isLoaded, setIsLoaded] = useState(loading);\r\n    const [toggleProbaFactorData, setToggleProbaFactorData] = useState(false);\r\n    const [toggleConseFactorData, setToggleConseFactorData] = useState(false);\r\n    const [toggleInspeData, setToggleInspeData] = useState(false);\r\n    const [toggleResults, setToggleResults] = useState(false);\r\n    const [toggleRiskAssess, setToggleRiskAssess] = useState(false);\r\n    \r\n    const fetchProject = () => {\r\n        fetch(`/api/v1/projects/${id}/`)\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                setImpressCathodProtectionValue(\r\n                    data.default_values.probability_factor_data.impresses_cathodic_protect\r\n                );\r\n                setSacriCathProteValue(\r\n                    data.default_values.probability_factor_data.sacrificial_cathodic_propect\r\n                );\r\n                setBottomPlatesInternalCoatingValue(\r\n                    data.default_values.probability_factor_data.bottom_plates_internal_coating_or_linin\r\n                );\r\n                setBottomPlatesExternalCoatingValue(\r\n                    data.default_values.probability_factor_data.bottom_plates_external_coatin\r\n                );\r\n                setStorageConditionValue(\r\n                    data.default_values.probability_factor_data.storage_condition\r\n                );\r\n                setTypeOfBottonValue(\r\n                    data.default_values.probability_factor_data.types_of_bottom\r\n                );\r\n                setHeatingCoilsInTankValue(\r\n                    data.default_values.probability_factor_data.heating_coils_in_tanks\r\n                );\r\n                setProductCorrosivityValue(\r\n                    data.default_values.probability_factor_data.products_corrosivity\r\n                );\r\n                setFoundationTypeValue(\r\n                    data.default_values.probability_factor_data.foundation_types\r\n                );\r\n                setHeightOfFoundationValue(\r\n                    data.default_values.probability_factor_data.heights_of_foundation\r\n                );\r\n                setEffectiveDrainageValue(\r\n                    data.default_values.probability_factor_data.effectiveness_of_drainages\r\n                );\r\n                setTimeToRepairValue(\r\n                    data.default_values.consequence_factor_data.time_to_repair\r\n                );\r\n                setCostOfRepairValue(\r\n                    data.default_values.consequence_factor_data.cost_of_repair\r\n                );\r\n                setDrainageMagnitudeValue(\r\n                    data.default_values.consequence_factor_data.probable_magnitude_of_product_loss\r\n                );\r\n                setLikelihoodOfInjuryValue(\r\n                    data.default_values.consequence_factor_data.likelihood_of_injury_to_personnel\r\n                );\r\n                setProductFlamabilityValue(\r\n                    data.default_values.consequence_factor_data.product_flammability_as_per_MCSP\r\n                );\r\n                setProductToxicityValue(\r\n                    data.default_values.consequence_factor_data.product_toxicity\r\n                )\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n    \r\n    const fetchImpressCathodic = () => {\r\n        fetch('/api/v1/selectfields/impress-cathodic/')\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                setImpressCathodProtection(data);\r\n                // console.log(impressCathodProtection);\r\n                setIsLoaded(true);\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n    \r\n    \r\n    const fetchsacriCathProte = () => {\r\n        fetch(\"/api/v1/selectfields/sacrificial-cathodic/\")\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                setSacriCathProte(data);\r\n                //console.log(sacriCathProte);\r\n                setIsLoaded(true);\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n    \r\n    const fetchbottomPlatesInternalCoating = () => {\r\n        fetch(\"/api/v1/selectfields/internal-coating/\")\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                setBottomPlatesInternalCoating(data);\r\n                //console.log(bottomPlatesInternalCoating);\r\n                setIsLoaded(true);\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n    \r\n    const fetchbottomPlatesExternalCoating = () => {\r\n        fetch(\"/api/v1/selectfields/external-coating/\")\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                setBottomPlatesExternalCoating(data);\r\n                //console.log(bottomPlatesExternalCoating);\r\n                setIsLoaded(true);\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n    \r\n    const fetchstorageCondition = () => {\r\n        fetch(\"/api/v1/selectfields/storage-conditions/\")\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                setStorageCondition(data);\r\n                //console.log(storageCondition);\r\n                setIsLoaded(true);\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n    \r\n    const fetchtypeOfBotton = () => {\r\n        fetch(\"/api/v1/selectfields/type-of-bottom/\")\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                setTypeOfBotton(data);\r\n                //console.log(typeOfBotton);\r\n                setIsLoaded(true);\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n    \r\n    const fetchheatingCoilsInTank = () => {\r\n        fetch(\"/api/v1/selectfields/heating-coils/\")\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                setHeatingCoilsInTank(data);\r\n                //console.log(heatingCoilsInTank);\r\n                setIsLoaded(true);\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n    \r\n    const fetchproductCorrosivity = () => {\r\n        fetch(\"/api/v1/selectfields/product-corrosivity/\")\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                setProductCorrosivity(data);\r\n                //console.log(productCorrosivity);\r\n                setIsLoaded(true);\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n    \r\n    const fetchfoundationType = () => {\r\n        fetch(\"/api/v1/selectfields/foundation-type/\")\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                setFoundationType(data);\r\n                //console.log(foundationType);\r\n                setIsLoaded(true);\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n    \r\n    const fetchheightOfFoundation = () => {\r\n        fetch(\"/api/v1/selectfields/height-of-foundation/\")\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                setHeightOfFoundation(data);\r\n                //console.log(heightOfFoundation);\r\n                setIsLoaded(true);\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n    \r\n    \r\n    const fetcheffectiveDrainage = () => {\r\n        fetch(\"/api/v1/selectfields/effectivenessOf-drainage/\")\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                setEffectiveDrainage(data);\r\n                //console.log(effectiveDrainage);\r\n                setIsLoaded(true);\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n    \r\n    const fetchtimeToRepair = () => {\r\n        fetch(\"/api/v1/selectfields/time-to-repair/\")\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                setTimeToRepair(data);\r\n                // console.log(timeToRepair);\r\n                setIsLoaded(true);\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n    \r\n    const fetchcostOfRepair = () => {\r\n        fetch(\"/api/v1/selectfields/cost-of-repair/\")\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                setCostOfRepair(data);\r\n                //console.log(costOfRepair);\r\n                setIsLoaded(true);\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n    \r\n    const fetchdrainageMagnitude = () => {\r\n        fetch(\"/api/v1/selectfields/drainage-magnitude/\")\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                setDrainageMagnitude(data);\r\n                //console.log(drainageMagnitude);\r\n                setIsLoaded(true);\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n    \r\n    const fetchlikelihoodOfInjury = () => {\r\n        fetch(\"/api/v1/selectfields/likelihood-of-injury/\")\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                setLikelihoodOfInjury(data);\r\n                //console.log(likelihoodOfInjury);\r\n                setIsLoaded(true);\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n    \r\n    const fetchproductFlamability = () => {\r\n        fetch(\"/api/v1/selectfields/product-flamability/\")\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                setProductFlamability(data);\r\n                //console.log(productFlamability);\r\n                setIsLoaded(true);\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n    \r\n    const fetchproductToxicity = () => {\r\n        fetch(\"/api/v1/selectfields/product-toxicity/\")\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                setProductToxicity(data);\r\n                //console.log(productToxicity);\r\n                setIsLoaded(true);\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n    \r\n    const fetchlocationOfTank = () => {\r\n        fetch(\"/api/v1/selectfields/location-of-tank/\")\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                setLocationOfTank(data);\r\n                //console.log(locationOfTank);\r\n                setIsLoaded(true);\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n    \r\n    const fetchenvironHazard = () => {\r\n        fetch(\"/api/v1/selectfields/environmental-hazard/\")\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                setEnvironHazard(data);\r\n                //console.log(environHazard);\r\n                setIsLoaded(true);\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n    \r\n    const fetchvapourEmission = () => {\r\n        fetch(\"/api/v1/selectfields/vapour-emission/\")\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                setVapourEmission(data);\r\n                //console.log(vapourEmission);\r\n                setIsLoaded(true);\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n    \r\n    const fetchndtMethodUsed = () => {\r\n        fetch(\"/api/v1/selectfields/ndt-method-used/\")\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                setNdtMethodUsed(data);\r\n                //console.log(vapourEmission);\r\n                setIsLoaded(true);\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n    \r\n    \r\n    const fetchFreqOfInternalInsp = () => {\r\n        fetch(\"/api/v1/selectfields/freq-of-internal-insp/\")\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                setFreqOfInternalInsp(data);\r\n                //console.log(vapourEmission);\r\n                setIsLoaded(true);\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n    \r\n    const fetchTypeOfInternecting = () => {\r\n        fetch(\"/api/v1/selectfields/type-of-internecting/\")\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                setTypeOfInternecting(data);\r\n                //console.log(data);\r\n                setIsLoaded(true);\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n    \r\n\r\n    \r\n    useEffect(() => {\r\n        fetchProject();\r\n        \r\n        fetchImpressCathodic();\r\n        fetchsacriCathProte();\r\n        fetchbottomPlatesInternalCoating();\r\n        fetchbottomPlatesExternalCoating();\r\n        fetchstorageCondition();\r\n        fetchtypeOfBotton();\r\n        fetchheatingCoilsInTank();\r\n        fetchproductCorrosivity();\r\n        fetchfoundationType();\r\n        fetchheightOfFoundation();\r\n        fetcheffectiveDrainage();\r\n        fetchtimeToRepair();\r\n        fetchcostOfRepair();\r\n        fetchdrainageMagnitude();\r\n        fetchlikelihoodOfInjury();\r\n        fetchproductFlamability();\r\n        fetchproductToxicity();\r\n        fetchlocationOfTank();\r\n        fetchenvironHazard();\r\n        fetchvapourEmission();\r\n        fetchndtMethodUsed();\r\n        fetchFreqOfInternalInsp();\r\n        fetchTypeOfInternecting();\r\n    }, []);\r\n    \r\n    \r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        console.log('Submitted');\r\n        let dataToSubmit = {\r\n            id: id,\r\n            impressCathodProtectionValue: impressCathodProtectionValue,\r\n            sacriCathProteValue: sacriCathProteValue,\r\n            bottomPlatesInternalCoatingValue: bottomPlatesInternalCoatingValue,\r\n            bottomPlatesExternalCoatingValue: bottomPlatesExternalCoatingValue,\r\n            storageConditionValue: storageConditionValue,\r\n            typeOfBottonValue: typeOfBottonValue,\r\n            heatingCoilsInTankValue: heatingCoilsInTankValue,\r\n            productCorrosivityValue: productCorrosivityValue,\r\n            foundationTypeValue: foundationTypeValue,\r\n            heightOfFoundationValue: heightOfFoundationValue,\r\n            effectiveDrainageValue: effectiveDrainageValue,\r\n            timeToRepairValue: timeToRepairValue,\r\n            costOfRepairValue: costOfRepairValue,\r\n            drainageMagnitudeValue: drainageMagnitudeValue,\r\n            likelihoodOfInjuryValue: likelihoodOfInjuryValue,\r\n            productFlamabilityValue: productFlamabilityValue,\r\n            productToxicityValue: productToxicityValue\r\n        };\r\n        console.log(dataToSubmit);\r\n        fetch('http://127.0.0.1:8000/api/v1/update-project-details/', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            credentials: 'include',\r\n            body: JSON.stringify(dataToSubmit)\r\n        })\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                console.log(data);\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n    \r\n    const impressCathodProtectionHandler = (e) => {\r\n        console.log(e.target.value);\r\n        setImpressCathodProtectionValue(e.target.value);\r\n    }\r\n    \r\n    const sacriCathProteHandler = (e) => {\r\n        console.log(e.target.value);\r\n        setSacriCathProteValue(e.target.value);\r\n    }\r\n    \r\n    const bottomPlatesInternalCoatingHandler = (e) => {\r\n        console.log(e.target.value);\r\n        setBottomPlatesInternalCoatingValue(e.target.value);\r\n    }\r\n    \r\n    const bottomPlatesExternalCoatingHandler = (e) => {\r\n        console.log(e.target.value);\r\n        setBottomPlatesExternalCoatingValue(e.target.value);\r\n    }\r\n    \r\n    const storageConditionValueHandler = (e) => {\r\n        console.log(e.target.value);\r\n        setStorageConditionValue(e.target.value);\r\n    }\r\n    \r\n    const typeOfBottonValueHandler = (e) => {\r\n        console.log(e.target.value);\r\n        setTypeOfBottonValue(e.target.value);\r\n    }\r\n    \r\n    const heatingCoilsInTankValueHandler = (e) => {\r\n        console.log(e.target.value);\r\n        setHeatingCoilsInTankValue(e.target.value);\r\n    }\r\n    \r\n    const productCorrosivityValueHandler = (e) => {\r\n        console.log(e.target.value);\r\n        setProductCorrosivityValue(e.target.value);\r\n    }\r\n    \r\n    const foundationTypeValueHandler = (e) => {\r\n        console.log(e.target.value);\r\n        setFoundationTypeValue(e.target.value);\r\n    }\r\n    \r\n    const heightOfFoundationHandler = (e) => {\r\n        console.log(e.target.value);\r\n        setHeightOfFoundationValue(e.target.value);\r\n    }\r\n    \r\n    const effectiveDrainageValueHandler = (e) => {\r\n        console.log(e.target.value);\r\n        setEffectiveDrainageValue(e.target.value);\r\n    }\r\n    \r\n    const timeToRepairValueHandler = (e) => {\r\n        console.log(e.target.value);\r\n        setTimeToRepairValue(e.target.value);\r\n    }\r\n    \r\n    const costOfRepairValueHandler = (e) => {\r\n        console.log(e.target.value);\r\n        setCostOfRepairValue(e.target.value);\r\n    }\r\n    \r\n    const drainageMagnitudeValueHandler = (e) => {\r\n        console.log(e.target.value);\r\n        setDrainageMagnitudeValue(e.target.value);\r\n    }\r\n    \r\n    const likelihoodOfInjuryValueHandler = (e) => {\r\n        console.log(e.target.value);\r\n        setLikelihoodOfInjuryValue(e.target.value);\r\n    }\r\n    \r\n    const productFlamabilityValueHandler = (e) => {\r\n        console.log(e.target.value);\r\n        setProductFlamabilityValue(e.target.value);\r\n    } \r\n    \r\n    const productToxicityValueHandler = (e) => {\r\n        console.log(e.target.value);\r\n        setProductToxicityValue(e.target.value);\r\n    }\r\n\r\n    \r\n\r\n    return (\r\n        <div>\r\n            <h2>Bottom Plates</h2>\r\n            <br />\r\n            <form>\r\n                {isLoaded === true ? (\r\n                    <div>\r\n                        <div>\r\n                            <h4\r\n                                className=\"data-module\"\r\n                                id=\"proba-factor\"\r\n                                onClick={() => setToggleProbaFactorData(!toggleProbaFactorData)}\r\n                            >\r\n                                <span>\r\n                                    Probability Factor Data\r\n                                </span>\r\n                                <span className=\"toggle-sign\">\r\n                                    {toggleProbaFactorData === true ? (\r\n                                        <span>&#9650;</span>\r\n                                    ) : <span>&#9660;</span>}\r\n                                </span>\r\n                            </h4>\r\n                            {toggleProbaFactorData === true ? (\r\n                                <div>\r\n                                    <div className=\"data-section\">\r\n                                        <h6 className=\"data-title\"><b>Above Ground Flat Bottommed Storage Tanks</b></h6>\r\n                                        <div className=\"select-fields-div\">\r\n                                            <SelectField \r\n                                                fields={impressCathodProtection}\r\n                                                value={impressCathodProtectionValue}\r\n                                                labelValue=\"Impress Cathodic Protection\"\r\n                                                valueHandler={impressCathodProtectionHandler}\r\n                                            />\r\n                                            <SelectField \r\n                                                fields={sacriCathProte}\r\n                                                value={sacriCathProteValue}\r\n                                                labelValue=\"Sacrificial Cathodic Protection\"\r\n                                                valueHandler={sacriCathProteHandler}\r\n                                            />\r\n                                            <SelectField \r\n                                                fields={bottomPlatesInternalCoating} \r\n                                                value={bottomPlatesInternalCoatingValue}\r\n                                                labelValue=\"Bottom Plates Internal Coating\"\r\n                                                valueHandler={bottomPlatesInternalCoatingHandler}\r\n                                            />\r\n                                            <SelectField \r\n                                                fields={bottomPlatesExternalCoating} \r\n                                                value={bottomPlatesExternalCoatingValue}\r\n                                                labelValue=\"Bottom Plates External Coating\"\r\n                                                valueHandler={bottomPlatesExternalCoatingHandler}\r\n                                            />\r\n                                        </div>\r\n                                        \r\n                                        <br /> <br />\r\n                                        <h6 className=\"data-title\"><b>Atmospheric Storage Tanks</b></h6>\r\n                                        <div>\r\n                                            <div className=\"select-fields-div\">\r\n                                                <SelectField \r\n                                                    fields={storageCondition} \r\n                                                    value={storageConditionValue}\r\n                                                    labelValue=\"Storage Conditions\"\r\n                                                    valueHandler={storageConditionValueHandler}\r\n                                                />\r\n                                                <SelectField\r\n                                                    fields={typeOfBotton}\r\n                                                    value={typeOfBottonValue}\r\n                                                    labelValue=\"Type Of Botton\"\r\n                                                    valueHandler={typeOfBottonValueHandler}\r\n                                                />\r\n                                                <SelectField\r\n                                                    fields={heatingCoilsInTank}\r\n                                                    value={heatingCoilsInTankValue}\r\n                                                    labelValue=\"Heating Coils In Tank\"\r\n                                                    valueHandler={heatingCoilsInTankValueHandler}\r\n                                                />\r\n                                                <SelectField\r\n                                                    fields={productCorrosivity}\r\n                                                    value={productCorrosivityValue}\r\n                                                    labelValue=\"Product Corrosivity\"\r\n                                                    valueHandler={productCorrosivityValueHandler}\r\n                                                />\r\n                                            </div>\r\n                                        </div>\r\n                                        \r\n                                        <br /> <br />\r\n                                        <h6 className=\"data-title\"><b>RBI for Athmospheric Storage Tanks</b></h6>\r\n                                        <div>\r\n                                            <div className=\"select-fields-div\">\r\n                                                <SelectField \r\n                                                    fields={foundationType}\r\n                                                    value={foundationTypeValue}\r\n                                                    labelValue=\"Foundation Type\"\r\n                                                    valueHandler={foundationTypeValueHandler}\r\n                                                />\r\n                                                <SelectField \r\n                                                    fields={heightOfFoundation}\r\n                                                    value={heightOfFoundationValue}\r\n                                                    labelValue=\"Height Of Foundation\"\r\n                                                    valueHandler={heightOfFoundationHandler}\r\n                                                />\r\n                                                <SelectField \r\n                                                    fields={effectiveDrainage}\r\n                                                    value={effectiveDrainageValue}\r\n                                                    labelValue=\"Effective Drainage\"\r\n                                                    valueHandler={effectiveDrainageValueHandler}\r\n                                                />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            ) : \"\" }\r\n                            \r\n                            <span />\r\n                            <h4\r\n                                className=\"data-module\"\r\n                                id=\"conseq-factor\"\r\n                                onClick={() => setToggleConseFactorData(!toggleConseFactorData)}\r\n                            >\r\n                                <span>Consequence Factor Data</span>\r\n                                <span className=\"toggle-sign\">\r\n                                    {toggleConseFactorData === true ? (\r\n                                        <span>&#9650;</span>\r\n                                    ) : <span>&#9660;</span>}\r\n                                </span>\r\n                            </h4>\r\n                            {toggleConseFactorData === true ? (\r\n                                <div>\r\n                                    <div className=\"data-section\">\r\n                                        <h6 className=\"data-title\"><b>Economic Aspects</b></h6>\r\n                                        <div className=\"select-fields-div\">\r\n                                            <SelectField\r\n                                                fields={timeToRepair}\r\n                                                value={timeToRepairValue}\r\n                                                labelValue=\"Time To Repair\"\r\n                                                valueHandler={timeToRepairValueHandler}\r\n                                            />\r\n                                            <SelectField\r\n                                                fields={costOfRepair}\r\n                                                value={costOfRepairValue}\r\n                                                labelValue=\"Cost Of Repair\"\r\n                                                valueHandler={costOfRepairValueHandler}\r\n                                            />\r\n                                            <SelectField\r\n                                                fields={drainageMagnitude}\r\n                                                value={drainageMagnitudeValue}\r\n                                                labelValue=\"Probable Magnitude of Product Loss\"\r\n                                                valueHandler={drainageMagnitudeValueHandler}\r\n                                            />\r\n                                        </div>\r\n                                        \r\n                                        <br/>\r\n                                        <h6 className=\"data-title\"><b>Health and Safety Concerns</b></h6>\r\n                                        <div className=\"select-fields-div\">\r\n                                            <SelectField\r\n                                                fields={likelihoodOfInjury}\r\n                                                value={likelihoodOfInjuryValue}\r\n                                                labelValue=\"Likelihood Of Injury to Personnel\"\r\n                                                valueHandler={likelihoodOfInjuryValueHandler}\r\n                                            />\r\n                                            <SelectField\r\n                                                fields={productFlamability}\r\n                                                value={productFlamabilityValue}\r\n                                                labelValue=\"Product Flamability as per MCSP\"\r\n                                                valueHandler={productFlamabilityValueHandler}\r\n                                            />\r\n                                            <SelectField\r\n                                                fields={productToxicity}\r\n                                                value={productToxicityValue}\r\n                                                labelValue=\"Product Toxicity\"\r\n                                                valueHandler={productToxicityValueHandler}\r\n                                            />\r\n                                            <SelectField\r\n                                                fields={locationOfTank}\r\n                                                labelValue=\"Location Of Tank Farm\"\r\n                                            />\r\n                                        </div>\r\n                                        \r\n                                        <br/>\r\n                                        <h6 className=\"data-title\"><b>Environmental Aspects</b></h6>\r\n                                        <div className=\"select-fields-div\">\r\n                                            <SelectField\r\n                                                fields={environHazard}\r\n                                                labelValue=\"Environmetal Hazard to Soil and Water as the Potential to Cause\"\r\n                                            />\r\n                                            <SelectField\r\n                                                fields={vapourEmission}\r\n                                                labelValue=\"Vapour Emission\"\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            ) : \"\" }\r\n                            \r\n                            <span/>\r\n                            <h4\r\n                                className=\"data-module\"\r\n                                id=\"inspe-data\"\r\n                                onClick={() => setToggleInspeData(!toggleInspeData)}\r\n                            >\r\n                                <span>Inspection Data</span>\r\n                                <span className=\"toggle-sign\">\r\n                                    {toggleInspeData === true ? (\r\n                                        <span>&#9650;</span>\r\n                                    ) : <span>&#9660;</span>}\r\n                                </span>\r\n                            </h4>\r\n                            {toggleInspeData === true ? (\r\n                                <div>\r\n                                    <div className=\"data-section\">\r\n                                        <h6 className=\"data-title\"><b>Economic Aspects</b></h6>\r\n                                        <div className=\"select-fields-div\">\r\n                                            <div className=\"select-fields-one\">\r\n                                                <label htmlFor=\"last_inspection\">Last Inspection</label>\r\n                                                <br />\r\n                                                <input\r\n                                                    type=\"date\"\r\n                                                    id=\"last_inspection\"\r\n                                                    className=\"select-fields input\"\r\n                                                    name=\"Installation_of_PRD\"\r\n                                                    value={lastInspection}\r\n                                                    onChange={(e) => setLastInspection(e.target.value)}\r\n                                                />\r\n                                            </div>\r\n                                            <div className=\"select-fields-one\">\r\n                                                <label htmlFor=\"\">Minimum Thickness Measured During Previous Inspection</label>\r\n                                                <br/>\r\n                                                <input\r\n                                                    type=\"text\"\r\n                                                    className=\"select-fields input\"\r\n                                                    name=\"Installation_of_PRD\"\r\n                                                    value={minThicknessMeasuredPrevInsp}\r\n                                                    onChange={(e) => setMinThicknessMeasuredPrevInsp(e.target.value)}\r\n                                                />\r\n                                            </div>\r\n                                            <div className=\"select-fields-one\">\r\n                                                <label htmlFor=\"\">Period of Service Between Previous Inspection and Present Inspection</label>\r\n                                                <br/>\r\n                                                <input\r\n                                                    type=\"text\"\r\n                                                    className=\"select-fields input\"\r\n                                                    name=\"Installation_of_PRD\"\r\n                                                    value={periodOfServiceBetweenPrevAndPresentInspe}\r\n                                                    onChange={(e) => setPeriodOfServiceBetweenPrevAndPresentInspe(e.target.value)}\r\n                                                />\r\n                                            </div>\r\n                                            <div className=\"select-fields-one\">\r\n                                                <label htmlFor=\"\">Minimum Thickness Measured During Present Inspection</label>\r\n                                                <br/>\r\n                                                <input\r\n                                                    type=\"text\"\r\n                                                    className=\"select-fields input\"\r\n                                                    name=\"Installation_of_PRD\"\r\n                                                    value={minThicknessMeasuredPresentInsp}\r\n                                                    onChange={(e) => setMinThicknessMeasuredPresentInsp(e.target.value)}\r\n                                                />\r\n                                            </div>\r\n                                            <div className=\"select-fields-one\">\r\n                                                <label htmlFor=\"\">Minimum Allowable Bottom Place Thickness</label>\r\n                                                <br/>\r\n                                                <input\r\n                                                    type=\"text\"\r\n                                                    className=\"select-fields input\"\r\n                                                    name=\"Installation_of_PRD\"\r\n                                                    value={minAllowBottomPlaceThickness}\r\n                                                    onChange={(e) => setMinAllowBottomPlaceThickness(e.target.value)}\r\n                                                />\r\n                                            </div>\r\n                                            <SelectField\r\n                                                fields={ndtMethodUsed}\r\n                                                labelValue=\"Frequency Of Internal Inspection\"\r\n                                            />\r\n                                            <SelectField\r\n                                                fields={freqOfInternalInsp}\r\n                                                labelValue=\"NDT Method Used\"\r\n                                            />\r\n                                            <SelectField\r\n                                                fields={typeOfInternecting}\r\n                                                labelValue=\"NDT Method Used\"\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            ) : \"\"}\r\n                            <button\r\n                                className=\"btn-submit\"\r\n                                onClick={handleSubmit}\r\n                            >Submit</button>\r\n                            \r\n                            <br/><br/>\r\n                            <h4\r\n                                className=\"data-module\"\r\n                                onClick={() => setToggleRiskAssess(!toggleRiskAssess)}\r\n                            >\r\n                                <span>Results</span>\r\n                                <span className=\"toggle-sign\">\r\n                                    {toggleRiskAssess === true ? (\r\n                                        <span>&#9650;</span>\r\n                                    ) : <span>&#9660;</span>}\r\n                                </span>\r\n                            </h4>\r\n                            {toggleRiskAssess === true ? (\r\n                                <div>\r\n                                    <div className=\"data-section\">\r\n                                        <h6 className=\"data-title\"><b>Risk Assessment</b></h6>\r\n                                        <div className=\"select-fields-div-results\">\r\n                                            <div className=\"select-fields-one\">\r\n                                                <label htmlFor=\"\">Probability Factor</label>\r\n                                                \r\n                                                <input\r\n                                                    type=\"text\"\r\n                                                    className=\"select-fields input probability-factor\"\r\n                                                    name=\"probability_factor\"\r\n                                                    value={probabilityFactor}\r\n                                                    onChange={(e) => setProbabilityFactor(e.target.value)}\r\n                                                    disabled={true}\r\n                                                    style={{\r\n                                                        backgroundColor: \"white\"\r\n                                                    }}\r\n                                                />\r\n                                            </div>\r\n                                            <div className=\"select-fields-one\">\r\n                                                <label htmlFor=\"\">Probability Rating</label>\r\n                                                \r\n                                                <input\r\n                                                    type=\"text\"\r\n                                                    className=\"select-fields input probability-rating\"\r\n                                                    name=\"probability_rating\"\r\n                                                    value={probabilityRating}\r\n                                                    onChange={(e) => setProbabilityRating(e.target.value)}\r\n                                                    disabled={true}\r\n                                                    style={{\r\n                                                        backgroundColor: \"white\"\r\n                                                    }}\r\n                                                />\r\n                                            </div>\r\n                                            <div className=\"select-fields-one\">\r\n                                                <label htmlFor=\"\">Economic Aspects Consequence Factor</label>\r\n                                                \r\n                                                <input\r\n                                                    type=\"text\"\r\n                                                    className=\"select-fields input economic-factor\"\r\n                                                    name=\"economic_aspects_consequence_factor\"\r\n                                                    value={economicAspectsConsequenceFactor}\r\n                                                    onChange={(e) => setEconomicAspectsConsequenceFactor(e.target.value)}\r\n                                                    disabled={true}\r\n                                                    style={{\r\n                                                        backgroundColor: \"white\"\r\n                                                    }}\r\n                                                />\r\n                                            </div>\r\n                                            <div className=\"select-fields-one\">\r\n                                                <label htmlFor=\"\">Economic Aspects Consequence Rating</label>\r\n                                                \r\n                                                <input\r\n                                                    type=\"text\"\r\n                                                    className=\"select-fields input economic-rating\"\r\n                                                    name=\"economic_aspects_consequence_rating\"\r\n                                                    value={economicAspectsConseqRating}\r\n                                                    onChange={(e) => setEconomicAspectsConseqRating(e.target.value)}\r\n                                                    disabled={true}\r\n                                                    style={{\r\n                                                        backgroundColor: \"white\"\r\n                                                    }}\r\n                                                />\r\n                                            </div>\r\n                                            <div className=\"select-fields-one\">\r\n                                                <label htmlFor=\"\">Health and Safety Aspects Consequence Factor</label>\r\n                                                \r\n                                                <input\r\n                                                    type=\"text\"\r\n                                                    className=\"select-fields input health-factor\"\r\n                                                    name=\"health_and_safety_aspects_consequence_factor\"\r\n                                                    value={healthSafetyAspectsconseqFactor}\r\n                                                    onChange={(e) => setHealthSafetyAspectsconseqFactor(e.target.value)}\r\n                                                    disabled={true}\r\n                                                    style={{\r\n                                                        backgroundColor: \"white\"\r\n                                                    }}\r\n                                                />\r\n                                            </div>\r\n                                            <div className=\"select-fields-one\">\r\n                                                <label htmlFor=\"\">Health and Safety Aspects Consequence Rating</label>\r\n                                                \r\n                                                <input\r\n                                                    type=\"text\"\r\n                                                    className=\"select-fields input health-rating\"\r\n                                                    name=\"health_and_safety_aspects_consequence_rating\"\r\n                                                    value={healthSafetyAspectsConseqRating}\r\n                                                    onChange={(e) => setHealthSafetyAspectsConseqRating(e.target.value)}\r\n                                                    disabled={true}\r\n                                                    style={{\r\n                                                        backgroundColor: \"white\"\r\n                                                    }}\r\n                                                />\r\n                                            </div>\r\n                                            <div className=\"select-fields-one\">\r\n                                                <label htmlFor=\"\">Environmental Aspects Consequence Factor</label>\r\n                                                \r\n                                                <input\r\n                                                    type=\"text\"\r\n                                                    className=\"select-fields input environmental-factor\"\r\n                                                    name=\"environmental_aspects_consequence_factor\"\r\n                                                    value={environAspectsConsequenceFactor}\r\n                                                    onChange={(e) => setEnvironAspectsConsequenceFactor(e.target.value)}\r\n                                                    disabled={true}\r\n                                                    style={{\r\n                                                        backgroundColor: \"white\"\r\n                                                    }}\r\n                                                />\r\n                                            </div>\r\n                                            <div className=\"select-fields-one\">\r\n                                                <label htmlFor=\"\">Environmental Aspects Consequence Rating</label>\r\n                                                \r\n                                                <input\r\n                                                    type=\"text\"\r\n                                                    className=\"select-fields input environmental-rating\"\r\n                                                    name=\"environmental_aspects_consequence_rating\"\r\n                                                    value={environAspectsConsequenceRating}\r\n                                                    onChange={(e) => setEnvironAspectsConsequenceRating(e.target.value)}\r\n                                                    disabled={true}\r\n                                                    style={{\r\n                                                        backgroundColor: \"white\"\r\n                                                    }}\r\n                                                />\r\n                                            </div>\r\n                                            <div className=\"select-fields-one\">\r\n                                                <label htmlFor=\"\">Overall Consequence Factor</label>\r\n                                                \r\n                                                <input\r\n                                                    type=\"text\"\r\n                                                    className=\"select-fields input overall-factor\"\r\n                                                    name=\"overall_consequence_factor\"\r\n                                                    value={overallConsequenceFactor}\r\n                                                    onChange={(e) => setOverallConsequenceFactor(e.target.value)}\r\n                                                    disabled={true}\r\n                                                    style={{\r\n                                                        backgroundColor: \"white\"\r\n                                                    }}\r\n                                                />\r\n                                            </div>\r\n                                            <div className=\"select-fields-one\">\r\n                                                <label htmlFor=\"\">Overall Consequence Rating</label>\r\n                                                \r\n                                                <input\r\n                                                    type=\"text\"\r\n                                                    className=\"select-fields input overall-rating\"\r\n                                                    name=\"overall_consequence_rating\"\r\n                                                    value={overallConsequenceRating}\r\n                                                    onChange={(e) => setOverallConsequenceRating(e.target.value)}\r\n                                                    disabled={true}\r\n                                                    style={{\r\n                                                        backgroundColor: \"white\"\r\n                                                    }}\r\n                                                />\r\n                                            </div>\r\n                                            <div className=\"select-fields-one\">\r\n                                                <label htmlFor=\"\">Risk Rating</label>\r\n                                                \r\n                                                <input\r\n                                                    type=\"text\"\r\n                                                    className=\"select-fields input risk-rating\"\r\n                                                    name=\"risk_rating\"\r\n                                                    value={riskRating}\r\n                                                    onChange={(e) => setRiskRating(e.target.value)}\r\n                                                    disabled={true}\r\n                                                    style={{\r\n                                                        backgroundColor: \"white\"\r\n                                                    }}\r\n                                                />\r\n                                            </div>\r\n                                        </div>\r\n                                        \r\n                                        <br />\r\n                                        <h6 className=\"data-title\"><b>Remaining Life And Inspection Interval Assessment</b></h6>\r\n                                        <div className=\"select-fields-div-results\">\r\n                                            <div className=\"select-fields-one\">\r\n                                                <label htmlFor=\"\">Corrosion Rate</label>\r\n                                                \r\n                                                <input\r\n                                                    type=\"text\"\r\n                                                    className=\"select-fields input corrosion-rate\"\r\n                                                    name=\"corrosion_rate\"\r\n                                                    value={corrosionRate}\r\n                                                    onChange={(e) => setCorrosionRate(e.target.value)}\r\n                                                    disabled={true}\r\n                                                    style={{\r\n                                                        backgroundColor: \"white\"\r\n                                                    }}\r\n                                                />\r\n                                            </div>\r\n                                            <div className=\"select-fields-one\">\r\n                                                <label htmlFor=\"\">Acceleration Factor for Pitting</label>\r\n                                                \r\n                                                <input\r\n                                                    type=\"text\"\r\n                                                    className=\"select-fields input acceleration-factor-pitting\"\r\n                                                    name=\"acceleration_factor_for_pitting\"\r\n                                                    value={accelerationFactorForPitting}\r\n                                                    onChange={(e) => setAccelerationFactorForPitting(e.target.value)}\r\n                                                    disabled={true}\r\n                                                    style={{\r\n                                                        backgroundColor: \"white\"\r\n                                                    }}\r\n                                                />\r\n                                            </div>\r\n                                            <div className=\"select-fields-one\">\r\n                                                <label htmlFor=\"\">Adjusted Corrosion Rate</label>\r\n                                                <input\r\n                                                    type=\"text\"\r\n                                                    className=\"select-fields input adjusted-corrosion-rate\"\r\n                                                    name=\"adjusted_corrosion_rate\"\r\n                                                    value={adjustedCorrosionRate}\r\n                                                    onChange={(e) => setAdjustedCorrosionRate(e.target.value)}\r\n                                                    disabled={true}\r\n                                                    style={{\r\n                                                        backgroundColor: \"white\"\r\n                                                    }}\r\n                                                />\r\n                                            </div>\r\n                                            <div className=\"select-fields-one\">\r\n                                                <label htmlFor=\"\">Remaining Life</label>\r\n                                                <input\r\n                                                    type=\"text\"\r\n                                                    className=\"select-fields input remaining-life\"\r\n                                                    name=\"remaining_life\"\r\n                                                    value={remainingLife}\r\n                                                    onChange={(e) => setRemainingLife(e.target.value)}\r\n                                                    disabled={true}\r\n                                                    style={{\r\n                                                        backgroundColor: \"white\"\r\n                                                    }}\r\n                                                />\r\n                                            </div>\r\n                                            <div className=\"select-fields-one\">\r\n                                                <label htmlFor=\"\">Confidence Factor</label>\r\n                                                <input\r\n                                                    type=\"text\"\r\n                                                    className=\"select-fields input confidence-factor\"\r\n                                                    name=\"confidence_factor\"\r\n                                                    value={confidenceFactor}\r\n                                                    onChange={(e) => setConfidenceFactor(e.target.value)}\r\n                                                    disabled={true}\r\n                                                    style={{\r\n                                                        backgroundColor: \"white\"\r\n                                                    }}\r\n                                                />\r\n                                            </div>\r\n                                            <div className=\"select-fields-one\">\r\n                                                <label htmlFor=\"\">Confidence Factor Adjustement</label>\r\n                                                <input\r\n                                                    type=\"text\"\r\n                                                    className=\"select-fields input confidence-factor-adjustement\"\r\n                                                    name=\"confidence_factor_adjustement\"\r\n                                                    value={confidenceFactorAdjustement}\r\n                                                    onChange={(e) => setConfidenceFactorAdjustement(e.target.value)}\r\n                                                    disabled={true}\r\n                                                    style={{\r\n                                                        backgroundColor: \"white\"\r\n                                                    }}\r\n                                                />\r\n                                            </div>\r\n                                            <div className=\"select-fields-one\">\r\n                                                <label htmlFor=\"\">Ajusted Confidence Factor</label>\r\n                                                <input\r\n                                                    type=\"text\"\r\n                                                    className=\"select-fields input ajusted-confidence-factor\"\r\n                                                    name=\"ajusted_confidence_factor\"\r\n                                                    value={ajustedConfidenceFactor}\r\n                                                    onChange={(e) => setAjustedConfidenceFactor(e.target.value)}\r\n                                                    disabled={true}\r\n                                                    style={{\r\n                                                        backgroundColor: \"white\"\r\n                                                    }}\r\n                                                />\r\n                                            </div>\r\n                                            <div className=\"select-fields-one\">\r\n                                                <label htmlFor=\"\">Interval Before Next Required Inspection</label>\r\n                                                <input\r\n                                                    type=\"text\"\r\n                                                    className=\"select-fields input before-next-inspection\"\r\n                                                    name=\"interval_before_next_required_inspection\"\r\n                                                    value={intervalBeforeNextRequiredInspection}\r\n                                                    onChange={(e) => setIntervalBeforeNextRequiredInspection(e.target.value)}\r\n                                                    disabled={true}\r\n                                                    style={{\r\n                                                        backgroundColor: \"white\"\r\n                                                    }}\r\n                                                />\r\n                                            </div>\r\n                                            <div className=\"select-fields-one\">\r\n                                                <label htmlFor=\"\">Next Inspection</label>\r\n                                                <input\r\n                                                    type=\"text\"\r\n                                                    className=\"select-fields input next-inspection\"\r\n                                                    name=\"next_inspection\"\r\n                                                    value={nextInspection}\r\n                                                    onChange={(e) => setNextInspection(e.target.value)}\r\n                                                    disabled={true}\r\n                                                    style={{\r\n                                                        backgroundColor: \"white\"\r\n                                                    }}\r\n                                                />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            ) : \"\"}\r\n                        </div>\r\n                    </div>\r\n                ) : \"\"}\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nconst SelectField = ({ fields, value, labelValue, valueHandler }) => {\r\n    \r\n    if (value !== undefined) {\r\n        fields = fields.filter((field) => {\r\n            return field.id !== value.id\r\n        })\r\n    }\r\n    \r\n    return (\r\n        <div className=\"select-fields-one\">\r\n            <label htmlFor=\"impressCathodProtection\">{labelValue}</label>\r\n            <br />\r\n            <select\r\n                className=\"select-fields\"\r\n                id=\"impressCathodProtection\"\r\n                value={value}\r\n                onChange={valueHandler}\r\n            >\r\n                {value !== undefined ? (\r\n                    <option\r\n                        value={value.name}\r\n                    >{value.name}</option>\r\n                    ) : \"\"\r\n                }\r\n                {fields.map((value, index) => {\r\n                    return (\r\n                        <option \r\n                            key={index}\r\n                            value={value.name}\r\n                        >\r\n                            {value.name}\r\n                        </option>\r\n                    );\r\n                })}\r\n            </select>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default BottomPlates;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\n\r\n\r\nconst ShellPlates = () => {\r\n    \r\n    return (\r\n        <div>\r\n            <h2>Shell Plates</h2>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ShellPlates;","import React from 'react';\r\n\r\n\r\n\r\nconst TankRoof = () => {\r\n    \r\n    return (\r\n        <div>\r\n            <h2>Tank Roof</h2>\r\n            <select\r\n                className=\"select-fields\"\r\n                id=\"impressCathodProtection\"\r\n            >\r\n                <option \r\n                    value=\"\"\r\n                >Select Tank</option>\r\n                <option \r\n                    value=\"floating-roof\"\r\n                >Floating Roof</option>\r\n                <option \r\n                    value=\"\"\r\n                >Fixed Roof</option>\r\n            </select>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default TankRoof;","import React, { useState, useEffect } from 'react';\r\n\r\n\r\n\r\nconst RiskAssess = () => {\r\n    \r\n    return (\r\n        <div>\r\n            <h2>Risk Assessment & Inspection  Planning</h2>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default RiskAssess;","import React, { useState, useEffect } from 'react';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Route,\r\n    Switch,\r\n    Link\r\n} from 'react-router-dom';\r\nimport BottomPlates from './BottomPlates';\r\nimport ShellPlates from './ShellPlates';\r\nimport TankRoof from './TankRoof';\r\nimport RiskAssess from './RiskAssess';\r\n\r\n\r\nconst ProjectDetail = ({ id, loading }) => {\r\n    const [isLoaded, setIsLoaded] = useState(loading);\r\n    const [tankerName, setTankerName] = useState('');\r\n    const [tankerDescription, setTankerDescription] = useState('');\r\n    \r\n    const fetchProject = () => {\r\n        fetch(`http://127.0.0.1:8000/api/v1/projects/${id}/`)\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                console.log(data);\r\n                setTankerName(data.name);\r\n                setTankerDescription(data.description);\r\n            })\r\n            .catch(err => console.log(err));\r\n    };\r\n    \r\n    useEffect(() => {\r\n        fetchProject();\r\n    }, []);\r\n    \r\n    \r\n    return (\r\n        <div>\r\n            <span className=\"tanker-header\">\r\n                <i className=\"fab fa-servicestack\"></i>\r\n                <span>\r\n                    <p className=\"tanker-title\">{tankerName}</p>\r\n                    <span className=\"tanker-title-summary\">{tankerDescription}</span>\r\n                </span>\r\n            </span>\r\n            <br />\r\n            \r\n            <Router>\r\n                <div>\r\n                    <ul className=\"plate-types\">\r\n                        <li>\r\n                            <Link to=\"/bottom\">Bottom Plate</Link>\r\n                        </li>\r\n                        <li>\r\n                            <Link to=\"/shell\">Shell Plates</Link>\r\n                        </li>\r\n                        <li>\r\n                            <Link to=\"/roof\">Tank Roof</Link>\r\n                        </li>\r\n                        <li>\r\n                            <Link to=\"/risk\">Risk Assessment Result & Inspection Planning</Link>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n                <Switch>\r\n                    <Route path=\"/bottom\">\r\n                        <BottomPlates \r\n                            id={id} \r\n                        />\r\n                    </Route>\r\n                    <Route path=\"/shell\">\r\n                        <ShellPlates />\r\n                    </Route>\r\n                    <Route path=\"/roof\">\r\n                        <TankRoof />\r\n                    </Route>\r\n                    <Route path=\"/risk\">\r\n                        <RiskAssess />\r\n                    </Route>\r\n                </Switch>\r\n            </Router>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default ProjectDetail;","import React, { useState, useEffect } from 'react';\r\nimport ProjectDetail from './ProjectDetail';\r\n\r\n\r\nlet date1 = new Date(2019, 7, 10);\r\ndate1 = date1.toLocaleDateString()\r\nlet date2 = new Date(2020, 11, 23);\r\ndate2 = date2.toLocaleDateString();\r\n\r\nconst Projects = ({ loading=false }) => {\r\n\tconst [tankerName, setTankerName] = useState('Tank 1');\r\n\tconst [tankerDesc, setTankerDesc] = useState('Description of the Tank 1');\r\n\tconst [startDate, setStartDate] = useState(date1);\r\n\tconst [endDate, setEndDate] = useState(date2);\r\n\tconst [user, setUser] = useState('default');\r\n    const [admin, setAdmin] = useState('');\r\n\tconst [error, setError] = useState('');\r\n\tconst [tanker, setTanker] = useState({\r\n\t\ttanker_name: tankerName,\r\n\t\ttanker_descri: tankerDesc,\r\n\t\tstart_date: startDate,\r\n\t\tend_date: endDate,\r\n\t\tuser: user\r\n\t});\r\n\tconst [tankers, setTankers] = useState([tanker]);\r\n    const [allProjects, setAllProjects] = useState([]);\r\n    const [projectIsLoaded, setProjectIsLoaded] = useState(false);\r\n\t\r\n    const [createTankUpdate, setCreateTankUpdate] = useState('create')\r\n    const [idToSubmit, setIdToSubmit] = useState(0);\r\n    \r\n    const [isDetailPage, setIsDetailPage] = useState(false);\r\n\tconst [tankerId, setTankerId] = useState(null);\r\n    const [isLoaded, setIsLoaded] = useState(false);\r\n    \r\n    \r\n\tconst popupLoginToggle = () => {\r\n\t\tconst popup = document.querySelector('.form-create-tank');\r\n\t\tpopup.classList.toggle('active');\r\n\t}\r\n\t\r\n    const getUser = () => {\r\n        fetch('http://127.0.0.1:8000/api/v1/user/')\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                setAdmin(data.user);\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n    \r\n\tconst handleSubmit = (e) => {\r\n\t\te.preventDefault();\r\n        console.log(createTankUpdate);\r\n        \r\n\t\tif (user !== 'default') {\r\n            let toSubmit = {\r\n                'name': tankerName,\r\n                'description': tankerDesc,\r\n                'start_date': startDate,\r\n                'end_date': endDate,\r\n                //'default_values': null\r\n            };\r\n                \r\n            if (createTankUpdate === 'create') {\r\n                console.log(createTankUpdate);\r\n\r\n                fetch('http://127.0.0.1:8000/api/v1/create-project/', {\r\n                    method: 'POST',\r\n                    headers: {\r\n                            'Content-Type': 'application/json'\r\n                    },\r\n                    credentials: 'include',\r\n                    body: JSON.stringify(toSubmit)\r\n                })\r\n                    .then(res => {\r\n                        if (res.status >= 200 && res.status <= 299) {\r\n                            return res.json();\r\n                        } else {\r\n                            throw Error(res.statusText);\r\n                        }\r\n                    })\r\n                    .then(data => {\r\n                        console.log(data);\r\n                        fetchProjects();\r\n                    })\r\n                    .catch(err => console.log(err));\r\n            } else if (createTankUpdate === 'update') {\r\n                setCreateTankUpdate('create');\r\n                toSubmit.id = idToSubmit;\r\n                fetch('http://127.0.0.1:8000/api/v1/update-project/', {\r\n                    method: 'POST',\r\n                    headers: {\r\n                            'Content-Type': 'application/json'\r\n                    },\r\n                    credentials: 'include',\r\n                    body: JSON.stringify(toSubmit)\r\n                })\r\n                    .then(res => {\r\n                        if (res.status >= 200 && res.status <= 299) {\r\n                            return res.json();\r\n                        } else {\r\n                            throw Error(res.statusText);\r\n                        }\r\n                    })\r\n                    .then(data => {\r\n                        console.log(data);\r\n                        fetchProjects();\r\n                    })\r\n                    .catch(err => console.log(err));\r\n                \r\n            }\r\n                \r\n\t\t\tpopupLoginToggle();\r\n\t\t\tsetError('');\r\n\t\t} else {\r\n\t\t\tsetError('User must be selected');\r\n\t\t}\r\n\t}\r\n\t\r\n    \r\n    const fetchProjects = () => {\r\n        fetch('http://127.0.0.1:8000/api/v1/projects/')\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                // console.log(data);\r\n                setAllProjects(data);\r\n                setProjectIsLoaded(true);\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n    \r\n    const handleDelete = (e) => {\r\n        fetch(`http://127.0.0.1:8000/api/v1/projects/${e}/`, {\r\n            method: 'DELETE',\r\n            headers: { \r\n                'Content-Type': 'application/json'\r\n            }\r\n        });\r\n            \r\n        setTimeout(() => {\r\n            fetchProjects();         \r\n        }, 500);\r\n\t}\r\n\t\r\n\tconst handleUser = (e) => {\r\n\t\tif (e.target.value !== 'default') {\r\n\t\t\tsetError('');\r\n\t\t} else {\r\n\t\t\tsetError('User must be selected');\r\n\t\t}\r\n\t\tsetUser(e.target.value);\r\n\t}\r\n    \r\n    const handleDetails = (e) => {\r\n        setTankerId(e);\r\n        setIsDetailPage(true);\r\n    }\r\n    \r\n    const modifyProject = (e) => {\r\n        console.log(e);\r\n        setIdToSubmit(e);\r\n        setCreateTankUpdate('update');\r\n        fetch(`http://127.0.0.1:8000/api/v1/projects/${e}/`)\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                //console.log(data);\r\n                setTankerName(data.name);\r\n                setTankerDesc(data.description);\r\n                setStartDate(data.start_date);\r\n                setEndDate(data.end_date);\r\n            })\r\n            .catch(err => console.log(err));\r\n        \r\n        popupLoginToggle();\r\n    }\r\n\t\r\n\tuseEffect(() => {\r\n        fetchProjects();\r\n        getUser();\r\n\t}, []);\r\n\t\t\t\r\n\t\t\t\r\n\treturn (\r\n\t\t<div className=\"menu-session\">\r\n            {isDetailPage === false ? (\r\n                <div>\r\n                    <span className=\"tanker-header\">\r\n                        <i className=\"fab fa-servicestack\"></i>\r\n                        <span>\r\n                            <p className=\"tanker-title\">Create a Tank</p>\r\n                            <span className=\"tanker-title-summary\">Use the button below to create new tank</span>\r\n                        </span>\r\n                    </span>\r\n                    \r\n                    <div className=\"create-tank-button\">\r\n                        <button\r\n                            onClick={popupLoginToggle}\r\n                        >Create Tank</button>\r\n                    </div>\r\n                    \r\n                    <div className=\"tankers-list\">\r\n                        {allProjects !== [] ? \r\n                            allProjects.map((tanker, index) => {\r\n                                return (\r\n                                    <div \r\n                                        key={index}\r\n                                        className=\"tanker-detail\"\r\n                                    >\r\n                                        <h3>{tanker.name}</h3>\r\n                                        <p className=\"tanker-description\">\r\n                                            {tanker.description}\r\n                                        </p>\r\n                                        <span \r\n                                            className=\"display-dates\"\r\n                                        >\r\n                                            <span className=\"display-date\">Start: {tanker.start_date}</span>\r\n                                            <span className=\"display-date\">End: {tanker.end_date}</span>\r\n                                        </span>\r\n                                        <span className=\"tanker-pdf\">\r\n                                            <span>\r\n                                                <i className=\"far fa-file-pdf\"></i>\r\n                                            </span>\r\n                                            <span \r\n                                                className=\"modify-project\" \r\n                                                id=\"modify-project\"\r\n                                                onClick={() => modifyProject(tanker.id)}\r\n                                           >\r\n                                                Update\r\n                                            </span>\r\n                                        </span>\r\n                                        <span className=\"delete-assessment\">\r\n                                            <i \r\n                                                className=\"fas fa-trash-alt\"\r\n                                                onClick={() => handleDelete(tanker.id)}\r\n                                            ></i>\r\n                                            <span\r\n                                                onClick={() => handleDetails(tanker.id)}\r\n                                            >\r\n                                                Assessment <i className=\"white-space\">&nbsp;</i>\r\n                                                <i className=\"fas fa-chevron-right\"></i>\r\n                                            </span>\r\n                                        </span>\r\n                                    </div>\r\n                                );\r\n                            }) : \r\n                            <div>\r\n                                <p>No Tanker Yet</p>\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                    \r\n                    \r\n                    <div className=\"create-tank\">\r\n                        <form \r\n                            className=\"form-create-tank\"\r\n                            onSubmit={handleSubmit}\r\n                        >\r\n                            <a className=\"close-form\" onClick={popupLoginToggle}>\r\n                                <img src=\"/close_red.png\" />\r\n                            </a>\r\n                            <input\r\n                                type=\"input\"\r\n                                className=\"tanker-name\"\r\n                                id=\"tanker-name\"\r\n                                value={tankerName}\r\n                                onChange={e => setTankerName(e.target.value)}\r\n                                placeholder=\"Tanker Name\"\r\n                                required={true}\r\n                            />\r\n                            <textarea\r\n                                rows=\"5\"\r\n                                placeholder=\"Tanker Description\"\r\n                                value={tankerDesc}\r\n                                onChange={e => setTankerDesc(e.target.value)}\r\n                                required={true}\r\n                            ></textarea>\r\n                            <span className=\"dates\">\r\n                                <span>\r\n                                    <label\r\n                                        htmlFor=\"date1\"\r\n                                        className=\"date\"\r\n                                    >start date</label>\r\n                                    <input \r\n                                        type=\"date\" \r\n                                        id=\"date1\"\r\n                                        className=\"date1\"\r\n                                        value={startDate}\r\n                                        name={startDate}\r\n                                        onChange={e => setStartDate(e.target.value)}\r\n                                        required={true}\r\n                                    />\r\n                                </span>\r\n                                <span>\r\n                                    <label\r\n                                        htmlFor=\"date2\"\r\n                                        className=\"date\"\r\n                                    >end date</label>\r\n                                    <input \r\n                                        type=\"date\" \r\n                                        id=\"date2\"\r\n                                        className=\"date2\"\r\n                                        value={endDate}\r\n                                        onChange={e => setEndDate(e.target.value)}\r\n                                        required={true}\r\n                                    />\r\n                                </span>\r\n                            </span>\r\n                            <i style={{\r\n                                color:\"red\",\r\n                                fontSize:\"12px\"\r\n                            }}>{error}</i>\r\n                            <select \r\n                                className=\"select-user\"\r\n                                value={user}\r\n                                onChange={handleUser}\r\n                                required={true}\r\n                            >\r\n                                <option \r\n                                    value=\"default\"\r\n                                >Select Username</option>\r\n                                <option\r\n                                    value=\"user1\"\r\n                                >{admin}</option>\r\n                            </select>\r\n                            <button \r\n                                className=\"btn-create-tanker\"\r\n                            >Save Tank</button>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            ) : <ProjectDetail \r\n                    id={tankerId} \r\n                    loading={loading}\r\n                />\r\n            }\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\n\r\nconst TankerList = ({tankers}) => {\r\n\tconst handleDelete = (e) => {\r\n\t\tconsole.log(e);\r\n\t}\r\n\t\r\n\treturn (\r\n\t\t<div className=\"tankers-list\">\r\n\t\t\t{tankers.map((tanker, index) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div \r\n\t\t\t\t\t\tkey={index}\r\n\t\t\t\t\t\tclassName=\"tanker-detail\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<h3>{tanker.tanker_name}</h3>\r\n\t\t\t\t\t\t<p className=\"tanker-description\">\r\n\t\t\t\t\t\t\t{tanker.tanker_descri}\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t<span>Start date: {tanker.start_date}</span>\r\n\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t<span>End date: {tanker.end_date}</span>\r\n\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t<span className=\"tanker-pdf\">\r\n\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t<i className=\"far fa-clone\"></i>\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t<i className=\"far fa-file-pdf\"></i>\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t<span className=\"delete-assessment\">\r\n\t\t\t\t\t\t\t<i \r\n\t\t\t\t\t\t\t\tclassName=\"fas fa-trash-alt\"\r\n\t\t\t\t\t\t\t\tonClick={handleDelete}\r\n\t\t\t\t\t\t\t></i>\r\n\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\tAssessment <i className=\"white-space\">&nbsp;</i>\r\n\t\t\t\t\t\t\t\t<i className=\"fas fa-chevron-right\"></i>\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t);\r\n\t\t\t})}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Projects;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Sidebar = () => {\r\n\treturn (\r\n\t\t<ul id='mySidenav' className='sidenav'>\r\n\t\t\t<li>\r\n\t\t\t\t<Link to=\"/home\">Tank Dashboard</Link>\r\n\t\t\t</li>\r\n\t\t\t<li>\r\n\t\t\t\t<Link to=\"/projects\">Projects</Link>\r\n\t\t\t</li>\r\n\t\t\t<li>\r\n\t\t\t\t<Link to=\"/logout\">Logout</Link>\r\n\t\t\t</li>\r\n\t\t</ul>\r\n\t);\r\n};\r\n\r\nexport default Sidebar;","import React from 'react';\r\nimport {\r\n\tBrowserRouter as Router,\r\n\tRoute,\r\n\tSwitch\r\n} from 'react-router-dom';\r\nimport Tanker from './Tanker';\r\nimport Projects from './Projects';\r\nimport Logout from './Logout';\r\nimport Testing from '../components/Testing';\r\n\r\nimport Sidebar from './Sidebar';\r\n\r\n\r\nconst ReactRouterSetup = () => {\r\n\treturn (\r\n\t\t<Router>\r\n            <Sidebar />\r\n\t\t\t<Switch>\r\n\t\t\t\t<Route path='/home'>\r\n\t\t\t\t\t<Tanker />\r\n\t\t\t\t</Route>\r\n\t\t\t\t<Route path='/projects'>\r\n\t\t\t\t\t<Projects loading={false} />\r\n\t\t\t\t</Route>\r\n\t\t\t\t<Route path='/logout'>\r\n                    {/*<Testing />*/}\r\n\t\t\t\t</Route>\r\n\t\t\t</Switch>\r\n        </Router>\r\n\t);\r\n};\r\n\r\nexport default ReactRouterSetup;\r\n\r\n\r\n// import bitly_api\r\n// import os\r\n\r\n// BITLY_ACCESS_TOKEN = os.getenv('BITLY_ACCESS_TOKEN')\r\n// access = bitly_api.Connection(access_token=BITLY_ACCESS_TOKEN)\r\n// full_link = 'https://janu-voting-system.netlify.app/'\r\n// short_url = access.shorten(full_link)","import { Link } from 'react-router-dom';\nimport Header from './components/Header';\n//import Sidebar from './components/Sidebar';\nimport Switcher from './Switcher';\nimport Sidebar from './sidebar';\n\n\nconst App = () => {\n\treturn (\n\t\t<div className=\"main\">\n\t\t\t<>\n\t\t\t\t<Sidebar />\n\t\t\t</>\n\t\t\t{/*<div>\n\t\t\t\t<Switcher />\n\t\t\t</div>\n\t\t\t*/}\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './style_tanker.css';\nimport './style_new_tanker.css';\nimport './logout.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <>\n    <App />\n  </>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}