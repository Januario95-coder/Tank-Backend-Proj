# Generated by Django 3.1.7 on 2021-04-07 10:10

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('selectfields_shell', '0003_auto_20210407_0949'),
    ]

    operations = [
        migrations.CreateModel(
            name='LikelihoodOfInjuryToPersonnel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('No injury or near miss - score=1', 'No injury or near miss'), ('Minor injury - score=2', 'Minor injury'), ('Lost time injury/Medical treatment - score=3', 'Lost time injury/Medical treatment'), ('Serious injury/fatality on site - score=4', 'Serious injury/fatality on site')], default='No injury or near miss - Score=1', max_length=100, verbose_name='12a: Likelihood of injury to personnel')),
            ],
            options={
                'verbose_name': 'Likelihood Of Injury To Personnel',
                'verbose_name_plural': 'Likelihood Of Injury To Personnel',
            },
        ),
        migrations.CreateModel(
            name='LocationOfTankFarm',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('Tank farm within an abandonned area - score=1', 'Tank farm within an abandonned area'), ('Flat tank farm - score=2', 'Flat tank farm'), ('Flopping tank farm - score=3', 'Flopping tank farm'), ('In plant area within populous area - score=4', 'In plant area within populous area')], default='Tank farm within an abandonned area - Score=1', max_length=100, verbose_name='12d: Location of tank farm')),
            ],
            options={
                'verbose_name': 'Location Of Tank Farm',
                'verbose_name_plural': 'Location Of Tank Farm',
            },
        ),
        migrations.CreateModel(
            name='ProductFlammabilityAsPerMCSP',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('Class III(1) and unclassified product - score=1', 'Class III(1) and unclassified product'), ('Class II(1) product - score=2', 'Class II(1) product'), ('Class II(2) and III(2) product - score=3', 'Class II(2) and III(2) product'), ('Class I product - score=4', 'Class I product')], default='Class III(1) and unclassified product - Score=1', max_length=100, verbose_name='12b: Product flammability as per MCSP')),
            ],
            options={
                'verbose_name': 'Product Flammability As Per MCSP',
                'verbose_name_plural': 'Product Flammability As Per MCSP',
            },
        ),
        migrations.CreateModel(
            name='ProductToxicity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('Non-toxic substances - score=1', 'Non-toxic substances'), ('Toxic substance if in contact with other substances - score=2', 'Toxic substance if in contact with other substances'), ('Toxic substance - score=3', 'Toxic substance'), ('Extremely toxic substance - score=4', 'Extremely toxic substance')], default='Non-toxic substances- Score=1', max_length=100, verbose_name='12c: Product toxicity')),
            ],
            options={
                'verbose_name': 'Product Toxicity',
                'verbose_name_plural': 'Product Toxicity',
            },
        ),
    ]
